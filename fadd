#!/usr/bin/env zsh

0="${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}"
0="${${(M)0:#/*}:-$PWD/$0}"

# Desc: stage the selected file to git bare repo
#
# @params
# Globals:
#   ${mydir}: string, current directory of the executing script
#   ${stage_type}: modified, new file, or directory to stage
#   ${selected_files}: bash array of user selected files to stage
# Arguments:
#   -h|--help: show help message
#   -f|--file: select a file in PWD to stage
#   -d|--dir: select a directory in PWD to stage

emulate -LR zsh
setopt warncreateglobal noshortloops

local mydir; mydir=${0:h:A}
builtin source ${mydir}/fgit_helper

function usage() {
  builtin print -P -- "\
%F{1}%BUsage%f%b:
  %F{2}fadd%f [%F{13}-h%f] [%F{13}-f%f] [%F{13}-d%f] ...

Select files/directories or modified files through fzf.
Stage the selected file to the dotfile gitbare repo.

%F{4}Default%f: list all modified files and stage the selected files.

%F{1}%BOptions%f%b:
  %F{13}-h%f, %F{13}--help%f    Show this help message and exit
  %F{13}-f%f, %F{13}--file%f    Select files in current directory and stage the selected files
  %F{13}-d%f, %F{13}--dir%f     Select folders in current directory and stage the selected folders"
}

#######################################
# stage file
# Arguments:
#   $1: array of files to stage
#######################################

function stage_file() {
  local -a files && files=("$@")
  (( $#files == 0 )) && { print -Pr -- "%F{1}Nothing added%f"; exit 1; }
  command git add "${files[@]}"
}

local stage_type="modified"
local -a selected_files

while (( $# )) {
  case "$1" in
    (-f|--file) stage_type="file"; shift ;;
    (-d|--dir)  stage_type="dir";  shift ;;
    (-h|--help) usage && exit 0 ;;
    (*)         print::error "Invalid option: $1" && { usage; exit 1 } ;;
  esac
}

if [[ $stage_type = file ]] {
  selected_files=( ${(@f)"$(search_file f)"} )
} elif [[ $stage_type = dir ]] {
  selected_files=( ${(@f)"$(search_file d)"} )
} else {
  selected_files=( ${(@f)"$(get_modified_file 'Select files to stage' 'unstaged')"} )
}

stage_file "$selected_files[@]"

(( $#selected_files )) && command git status -sb
