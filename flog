#!/usr/bin/env zsh

0="${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}"
0="${${(M)0:#/*}:-$PWD/$0}"

# Desc: git log interactive viewer
#
# @params
# Globals:
#   ${mydir}: current dir of the script
#   ${selected_action}: action to take on the selected commit
#   ${selected_commit}: user selected commit
#   ${confirm}: confirm status of user
# Arguments:
#   -h|--help: display help message
#   -r|--revert: revert the selected commit
#   -R|--reset: reset HEAD back to the selected commit
#   -e|--edit: edit commmit (interactive rebase)
#   -c|--checkout: checkout selected commmit
#   -y|--yes: confirm action by default and skip confirmation

emulate -LR zsh
setopt warncreateglobal noshortloops

local mydir; mydir=${0:h:A}
builtin source ${mydir}/fgit_helper

function usage() {
  builtin print -P -- "\
%F{1}%BUsage%b%f:
  %F{2}flog%f [%F{13}-h%f] [%F{13}-r%f] [%F{13}-R%f] [%F{13}-e%f] [%F{13}-c%f] [%F{13}-y%f] ...

Interactive log viewer with action menu.
Action menu contains options including revert|reset|edit|checkout|exit.

%F{4}Default%f: list all commits and prompt a menu to select action to perform.

%F{1}%BOptions%f%b:
  %F{13}-h%f, %F{13}--help%f     Show this help message and exit
  %F{13}-r%f, %F{13}--revert%f   Revert the selected commit and skip action menu
  %F{13}-R%f, %F{13}--reset%f    Reset HEAD back to selected commit and skip action menu
  %F{13}-e%f, %F{13}--edit%f     Edit selected commit through interactive rebase and skip action menu
  %F{13}-c%f, %F{13}--checkout%f Checkout selected commit and skip action menu
  %F{13}-y%f, %F{13}--yes%f      Acknowledge all actions that will be taken and skip confirmation"
}

#######################################
# draw action menu for selected commit
# Arguments:
#   $1: selected commit hash, used to display commit message in fzf header
#   $2: selected action, if selected, skip menu, return action
# Outputs:
#   ${selected_action}: user selected action
#######################################
function draw_menu() {
  local selected_commit="$1"
  local selected_action="$2"
  local menu header message
  [[ -n "$selected_action" ]] && {
    builtin print -r -- "$selected_action"
  } || {
    menu="revert: revert the selected commit\n"
    menu="${menu}reset: reset HEAD to the selected commit using --mixed flag\n"
    menu="${menu}edit: edit selected commit through interactive rebase\n"
    menu="${menu}checkout: checkout the selected commit\n"
    menu="${menu}exit: quit flog"
    message=$(
      command git log \
        --format=%B -n 1 "$selected_commit"
    )
    header="commit $selected_commit: $message"
    selected_action=$(print -- "$menu" \
      | fzf --no-multi --header="$header" \
      | command awk -F ":" '{
          print $1
        }'
    )
    builtin print -r -- "$selected_action"
  }
}

while (( $# )) {
  case "$1" in
    (-r|--revert)   selected_action="revert";   shift ;;
    (-R|--reset)    selected_action="reset";    shift ;;
    (-e|--edit)     selected_action="edit";     shift ;;
    (-c|--checkout) selected_action="checkout"; shift ;;
    (-y|--yes)      confirm='y';                shift ;;
    (-h|--help)     usage && exit 0 ;;
    (*)             print::error "Invalid option: $1" &&   { usage; exit 1 } ;;
  esac
}

while :; do
  selected_commit=$(get_commit)
  [[ -z "$selected_commit" ]] && exit 1
  selected_action=$(draw_menu "${selected_commit}" "${selected_action}")
  [[ -n "$selected_action" ]] && break
done

if [[ "${selected_action}" != 'exit' ]]; then
  if [[ "${selected_action}" == "reset" ]] && [[ -z "${confirm}" ]]; then
    print -P -- "(%F{3}dryrun%f) reset HEAD to $selected_commit"
  elif [[ -z "$confirm" ]]; then
    print -P -- "(%F{3}dryrun%f) ${selected_action} ${selected_commit}"
  fi

  [[ -z "$confirm" ]] && confirm=$(get_confirmation)
  [[ "$confirm" != y ]] && exit 1
  notify-send 'past'
fi

case "$selected_action" {
  (revert) git revert "${selected_commit}" ;;
  (reset) git reset "${selected_commit}" ;;
  (edit) git rebase -i "${selected_commit}"~ ;;
  (checkout) git checkout "${selected_commit}" ;;
  (exit) exit 0 ;;
  (*) exit 1 ;;
}
