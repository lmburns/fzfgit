#!/usr/bin/env zsh

0="${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}"
0="${${(M)0:#/*}:-$PWD/$0}"

# Grep for words within all dotfiles
#
# @params
# Globals
#   mydir: path to this current script
#   selected_lines: selected lines to edit
#   fzf_search_delimiter: the col to start searching in fzf

emulate -LR zsh
setopt warncreateglobal noshortloops

local mydir; mydir=${0:h:A}
builtin source ${mydir}/fgit_helper


usage() {
  echo -e "Usage: fgrep [-h] [-c] [-f] ...

Grep words within tracked files and select to edit matches.

Default: start searching from 3rd column (excluding the file name during search).

Optional arguments:
  -h, --help\t\tshow this help message and exit.
  -c COL, --col COL\tspecify the column number to start searching.
  -f, --full\t\tinclude all column during search, as if using '--col 1'."
}

typeset -a selected_lines=()
typeset -i fzf_search_delimiter=3

while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -c|--col) fzf_search_delimiter="$2" shift 2 ;;
    -f|--full) fzf_search_delimiter=1 shift ;;
    -h|--help) usage && exit 0 ;;
    *) echo "Invalid option: $1" >&2 && usage && exit 1 ;;
  esac
done

while IFS= read -r line; do
  case "${EDITOR}" in
    vim|nvim|nano)
      # line number = "${line##*:}"
      # file name = "${line%%:*}"
      selected_lines+=(+"${line##*:}" "${line%%:*}")
      ;;
    *)
      selected_lines+=("${line}")
      ;;
  esac
done < <(grep_words "select matches to edit" "${fzf_search_delimiter}")

[[ "${#selected_lines[@]}" -eq 0 ]] && exit 1

"${EDITOR}" "${selected_lines[@]}"
